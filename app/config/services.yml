# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value
     twig.extension.readable_html_enum_value.class: AppBundle\Twig\Extension\ReadableHtmlEnumValueExtension
services:
#    service_name:
#        class: AppBundle\Directory\ClassName
#        arguments: ["@another_service_name", "plain_value", "%parameter_name%"]
parameters:
    twig.extension.readable_html_enum_value.class: AppBundle\Twig\Extension\ReadableHtmlEnumValueExtension
services:
    twig.extension.readable_html_enum_value:
      class: %twig.extension.readable_html_enum_value.class%
      arguments: [%doctrine.dbal.connection_factory.types%]
      tags:
          - { name: twig.extension }
    twig.extension.url64:
      class: AppBundle\Twig\Extension\Base64Extension
      tags:
          - { name: twig.extension }      
    multiservices.arxis.form.type.users:
        class: AppBundle\Form\Type\UsersType
        arguments: ["@doctrine.orm.entity_manager"]
        tags:
            - { name: form.type, alias: users }  
    validator.arxis.UsernameValidator:
        class:  AppBundle\Validator\Constraints\UsernameValidator
        arguments:
            entityManager: "@doctrine.orm.entity_manager"
        tags:
            - { name: validator.constraint_validator, alias: username.validator }        
    validator.arxis.EmailValidator:
        class:  AppBundle\Validator\Constraints\EmailValidator
        arguments:
            entityManager: "@doctrine.orm.entity_manager"
        tags:
            - { name: validator.constraint_validator, alias: email.validator }        
  